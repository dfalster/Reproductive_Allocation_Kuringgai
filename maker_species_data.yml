# This file is automatically generated from maker_data.yml.whisker:
# edit the file there (or the files that it includes).

targets:
  species_data:
    depends:
      - BAER_HarvestData
      - BAER_Inv
      - BAER_Acc
      - BAER_RA
      - BOLE_HarvestData
      - BOLE_Inv
      - BOLE_Acc
      - BOLE_RA
      - COER_HarvestData
      - COER_Inv
      - COER_Acc
      - COER_RA
      - EPMI_HarvestData
      - EPMI_Inv
      - EPMI_Acc
      - EPMI_RA
      - GRBU_HarvestData
      - GRBU_Inv
      - GRBU_Acc
      - GRBU_RA
      - GRSP_HarvestData
      - GRSP_Inv
      - GRSP_Acc
      - GRSP_RA
      - HATE_HarvestData
      - HATE_Inv
      - HATE_Acc
      - HATE_RA
      - HEPU_HarvestData
      - HEPU_Inv
      - HEPU_Acc
      - HEPU_RA
      - LEES_HarvestData
      - LEES_Inv
      - LEES_Acc
      - LEES_RA
      - PELA_HarvestData
      - PELA_Inv
      - PELA_Acc
      - PELA_RA
      - PEPU_HarvestData
      - PEPU_Inv
      - PEPU_Acc
      - PEPU_RA
      - PHPH_HarvestData
      - PHPH_Inv
      - PHPH_Acc
      - PHPH_RA
      - PILI_HarvestData
      - PILI_Inv
      - PILI_Acc
      - PILI_RA
      - PUTU_HarvestData
      - PUTU_Inv
      - PUTU_Acc
      - PUTU_RA

  BAER_HarvestData:
    command: make_HarvestDataForBAER(HarvestData)
  BAER_Inv:
    command: >
      CalculateInvestmentForBAER(RegressionTable, AvCountsPerMM,
      AvWeightPerUnit, IndividualBasedWeights, FloweringCategories, Reproduction, MultiplierTable, GraphMaps)
  BAER_Acc:
    command: >
      CalculateAccesoryCostsForBAER(Reproduction, BAER_HarvestData, InvestmentCategories, BAER_Inv)
  BAER_RA:
    command: >
      CalculateRAForBAER(BAER_Inv, BAER_HarvestData, GraphMaps, IndividualsList)

  BOLE_HarvestData:
    command: make_HarvestDataForBOLE(HarvestData)
  BOLE_Inv:
    command: >
      CalculateInvestmentForBOLE(RegressionTable, AvCountsPerMM,
      AvWeightPerUnit, IndividualBasedWeights, FloweringCategories, Reproduction, MultiplierTable, GraphMaps)
  BOLE_Acc:
    command: >
      CalculateAccesoryCostsForBOLE(Reproduction, BOLE_HarvestData, InvestmentCategories, BOLE_Inv)
  BOLE_RA:
    command: >
      CalculateRAForBOLE(BOLE_Inv, BOLE_HarvestData, GraphMaps, IndividualsList)

  COER_HarvestData:
    command: make_HarvestDataForCOER(HarvestData)
  COER_Inv:
    command: >
      CalculateInvestmentForCOER(RegressionTable, AvCountsPerMM,
      AvWeightPerUnit, IndividualBasedWeights, FloweringCategories, Reproduction, MultiplierTable, GraphMaps)
  COER_Acc:
    command: >
      CalculateAccesoryCostsForCOER(Reproduction, COER_HarvestData, InvestmentCategories, COER_Inv)
  COER_RA:
    command: >
      CalculateRAForCOER(COER_Inv, COER_HarvestData, GraphMaps, IndividualsList)

  EPMI_HarvestData:
    command: make_HarvestDataForEPMI(HarvestData)
  EPMI_Inv:
    command: >
      CalculateInvestmentForEPMI(RegressionTable, AvCountsPerMM,
      AvWeightPerUnit, IndividualBasedWeights, FloweringCategories, Reproduction, MultiplierTable, GraphMaps)
  EPMI_Acc:
    command: >
      CalculateAccesoryCostsForEPMI(Reproduction, EPMI_HarvestData, InvestmentCategories, EPMI_Inv)
  EPMI_RA:
    command: >
      CalculateRAForEPMI(EPMI_Inv, EPMI_HarvestData, GraphMaps, IndividualsList)

  GRBU_HarvestData:
    command: make_HarvestDataForGRBU(HarvestData)
  GRBU_Inv:
    command: >
      CalculateInvestmentForGRBU(RegressionTable, AvCountsPerMM,
      AvWeightPerUnit, IndividualBasedWeights, FloweringCategories, Reproduction, MultiplierTable, GraphMaps)
  GRBU_Acc:
    command: >
      CalculateAccesoryCostsForGRBU(Reproduction, GRBU_HarvestData, InvestmentCategories, GRBU_Inv)
  GRBU_RA:
    command: >
      CalculateRAForGRBU(GRBU_Inv, GRBU_HarvestData, GraphMaps, IndividualsList)

  GRSP_HarvestData:
    command: make_HarvestDataForGRSP(HarvestData)
  GRSP_Inv:
    command: >
      CalculateInvestmentForGRSP(RegressionTable, AvCountsPerMM,
      AvWeightPerUnit, IndividualBasedWeights, FloweringCategories, Reproduction, MultiplierTable, GraphMaps)
  GRSP_Acc:
    command: >
      CalculateAccesoryCostsForGRSP(Reproduction, GRSP_HarvestData, InvestmentCategories, GRSP_Inv)
  GRSP_RA:
    command: >
      CalculateRAForGRSP(GRSP_Inv, GRSP_HarvestData, GraphMaps, IndividualsList)

  HATE_HarvestData:
    command: make_HarvestDataForHATE(HarvestData)
  HATE_Inv:
    command: >
      CalculateInvestmentForHATE(RegressionTable, AvCountsPerMM,
      AvWeightPerUnit, IndividualBasedWeights, FloweringCategories, Reproduction, MultiplierTable, GraphMaps)
  HATE_Acc:
    command: >
      CalculateAccesoryCostsForHATE(Reproduction, HATE_HarvestData, InvestmentCategories, HATE_Inv)
  HATE_RA:
    command: >
      CalculateRAForHATE(HATE_Inv, HATE_HarvestData, GraphMaps, IndividualsList)

  HEPU_HarvestData:
    command: make_HarvestDataForHEPU(HarvestData)
  HEPU_Inv:
    command: >
      CalculateInvestmentForHEPU(RegressionTable, AvCountsPerMM,
      AvWeightPerUnit, IndividualBasedWeights, FloweringCategories, Reproduction, MultiplierTable, GraphMaps)
  HEPU_Acc:
    command: >
      CalculateAccesoryCostsForHEPU(Reproduction, HEPU_HarvestData, InvestmentCategories, HEPU_Inv)
  HEPU_RA:
    command: >
      CalculateRAForHEPU(HEPU_Inv, HEPU_HarvestData, GraphMaps, IndividualsList)

  LEES_HarvestData:
    command: make_HarvestDataForLEES(HarvestData)
  LEES_Inv:
    command: >
      CalculateInvestmentForLEES(RegressionTable, AvCountsPerMM,
      AvWeightPerUnit, IndividualBasedWeights, FloweringCategories, Reproduction, MultiplierTable, GraphMaps)
  LEES_Acc:
    command: >
      CalculateAccesoryCostsForLEES(Reproduction, LEES_HarvestData, InvestmentCategories, LEES_Inv)
  LEES_RA:
    command: >
      CalculateRAForLEES(LEES_Inv, LEES_HarvestData, GraphMaps, IndividualsList)

  PELA_HarvestData:
    command: make_HarvestDataForPELA(HarvestData)
  PELA_Inv:
    command: >
      CalculateInvestmentForPELA(RegressionTable, AvCountsPerMM,
      AvWeightPerUnit, IndividualBasedWeights, FloweringCategories, Reproduction, MultiplierTable, GraphMaps)
  PELA_Acc:
    command: >
      CalculateAccesoryCostsForPELA(Reproduction, PELA_HarvestData, InvestmentCategories, PELA_Inv)
  PELA_RA:
    command: >
      CalculateRAForPELA(PELA_Inv, PELA_HarvestData, GraphMaps, IndividualsList)

  PEPU_HarvestData:
    command: make_HarvestDataForPEPU(HarvestData)
  PEPU_Inv:
    command: >
      CalculateInvestmentForPEPU(RegressionTable, AvCountsPerMM,
      AvWeightPerUnit, IndividualBasedWeights, FloweringCategories, Reproduction, MultiplierTable, GraphMaps)
  PEPU_Acc:
    command: >
      CalculateAccesoryCostsForPEPU(Reproduction, PEPU_HarvestData, InvestmentCategories, PEPU_Inv)
  PEPU_RA:
    command: >
      CalculateRAForPEPU(PEPU_Inv, PEPU_HarvestData, GraphMaps, IndividualsList)

  PHPH_HarvestData:
    command: make_HarvestDataForPHPH(HarvestData)
  PHPH_Inv:
    command: >
      CalculateInvestmentForPHPH(RegressionTable, AvCountsPerMM,
      AvWeightPerUnit, IndividualBasedWeights, FloweringCategories, Reproduction, MultiplierTable, GraphMaps)
  PHPH_Acc:
    command: >
      CalculateAccesoryCostsForPHPH(Reproduction, PHPH_HarvestData, InvestmentCategories, PHPH_Inv)
  PHPH_RA:
    command: >
      CalculateRAForPHPH(PHPH_Inv, PHPH_HarvestData, GraphMaps, IndividualsList)

  PILI_HarvestData:
    command: make_HarvestDataForPILI(HarvestData)
  PILI_Inv:
    command: >
      CalculateInvestmentForPILI(RegressionTable, AvCountsPerMM,
      AvWeightPerUnit, IndividualBasedWeights, FloweringCategories, Reproduction, MultiplierTable, GraphMaps)
  PILI_Acc:
    command: >
      CalculateAccesoryCostsForPILI(Reproduction, PILI_HarvestData, InvestmentCategories, PILI_Inv)
  PILI_RA:
    command: >
      CalculateRAForPILI(PILI_Inv, PILI_HarvestData, GraphMaps, IndividualsList)

  PUTU_HarvestData:
    command: make_HarvestDataForPUTU(HarvestData)
  PUTU_Inv:
    command: >
      CalculateInvestmentForPUTU(RegressionTable, AvCountsPerMM,
      AvWeightPerUnit, IndividualBasedWeights, FloweringCategories, Reproduction, MultiplierTable, GraphMaps)
  PUTU_Acc:
    command: >
      CalculateAccesoryCostsForPUTU(Reproduction, PUTU_HarvestData, InvestmentCategories, PUTU_Inv)
  PUTU_RA:
    command: >
      CalculateRAForPUTU(PUTU_Inv, PUTU_HarvestData, GraphMaps, IndividualsList)
  RA_all:
    command: >
      combine_RA(
        BAER_RA,
        BOLE_RA,
        COER_RA,
        EPMI_RA,
        GRBU_RA,
        GRSP_RA,
        HATE_RA,
        HEPU_RA,
        LEES_RA,
        PELA_RA,
        PEPU_RA,
        PHPH_RA,
        PILI_RA,
        PUTU_RA,
        IndividualsList=IndividualsList)
